name: CICD

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.16"
      - name: Install dependencies
        run: |
          go version
          go get -u golang.org/x/lint/golint
      - name: Run vet & lint & test
        run: |
          go vet .
          golint .
          go test -coverpkg=./... -coverprofile="coverage.out"
      - name: Run build
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: amd64
        run: go build -ldflags="-s -w" -a -tags netgo -o app .
      - name: Save build as artifact
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: app
          retention-days: 2
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - name: Download server artifact
        uses: actions/download-artifact@v2
        with:
          name: app
      - name: Give exec perm
        run: |
          chmod +x app
          tree
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            thecampagnards/trafficlight-api
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & deploy to Docker registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      # - name: Update repo description
      #   uses: peter-evans/dockerhub-description@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     repository: thecampagnards/trafficlight-api
